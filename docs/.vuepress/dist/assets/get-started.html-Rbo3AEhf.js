import{_ as r,c as o,a as i,b as s,d as n,e as t,w as l,r as d,o as p}from"./app-lUwYjfZt.js";const c={};function u(h,e){const a=d("RouteLink");return p(),o("div",null,[e[9]||(e[9]=i(`<h1 id="🚀-快速开始" tabindex="-1"><a class="header-anchor" href="#🚀-快速开始"><span>🚀 快速开始</span></a></h1><p>欢迎来到Cursor最佳实践的世界！这里不是枯燥的功能介绍，而是让你<strong>立刻上手、马上见效</strong>的实战指南。</p><h2 id="🎯-5分钟快速上手" tabindex="-1"><a class="header-anchor" href="#🎯-5分钟快速上手"><span>🎯 5分钟快速上手</span></a></h2><h3 id="第一步-下载安装cursor" tabindex="-1"><a class="header-anchor" href="#第一步-下载安装cursor"><span>第一步：下载安装Cursor</span></a></h3><p>如果你还没有安装Cursor，请前往 <a href="https://cursor.sh" target="_blank" rel="noopener noreferrer">cursor.sh</a> 下载最新版本。</p><h3 id="第二步-掌握核心快捷键" tabindex="-1"><a class="header-anchor" href="#第二步-掌握核心快捷键"><span>第二步：掌握核心快捷键</span></a></h3><p>这三个快捷键是你高效使用Cursor的基础：</p><table><thead><tr><th>快捷键</th><th>功能</th><th>使用场景</th></tr></thead><tbody><tr><td><code>Cmd+K</code> (Mac) / <code>Ctrl+K</code> (Win)</td><td>快速编辑</td><td>选中代码后直接生成/修改</td></tr><tr><td><code>Cmd+L</code> (Mac) / <code>Ctrl+L</code> (Win)</td><td>聊天对话</td><td>复杂需求讨论和代码解释</td></tr><tr><td><code>Tab</code></td><td>智能补全</td><td>接受AI建议的代码补全</td></tr></tbody></table><h3 id="第三步-你的第一次ai对话" tabindex="-1"><a class="header-anchor" href="#第三步-你的第一次ai对话"><span>第三步：你的第一次AI对话</span></a></h3><p>让我们从一个简单的例子开始：</p><ol><li><strong>创建一个新文件</strong> <code>hello.js</code></li><li><strong>按下 <code>Cmd+K</code></strong>，输入：<code>创建一个函数，计算两个数的和</code></li><li><strong>按Tab接受建议</strong>，看看AI为你生成了什么</li></ol><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>🎉 恭喜！你已经完成了第一次AI代码生成。</p><h2 id="💡-立即见效的3个技巧" tabindex="-1"><a class="header-anchor" href="#💡-立即见效的3个技巧"><span>💡 立即见效的3个技巧</span></a></h2><h3 id="技巧1-精准描述需求" tabindex="-1"><a class="header-anchor" href="#技巧1-精准描述需求"><span>技巧1：精准描述需求</span></a></h3><p>❌ <strong>不好的描述</strong>：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">&quot;帮我写个函数&quot;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>✅ <strong>好的描述</strong>：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">&quot;创建一个JavaScript函数，接收一个数组参数，返回数组中所有偶数的和，函数名为sumEvenNumbers&quot;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="技巧2-提供上下文" tabindex="-1"><a class="header-anchor" href="#技巧2-提供上下文"><span>技巧2：提供上下文</span></a></h3><p>选中相关代码后再使用<code>Cmd+K</code>，AI能更好地理解你的意图：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token comment">// 选中这段代码</span></span>
<span class="line"><span class="token keyword">const</span> users <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Alice&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">25</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Bob&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">30</span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 然后按Cmd+K，输入：&quot;为这个用户数组添加一个过滤成年用户的函数&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="技巧3-分步骤实现复杂功能" tabindex="-1"><a class="header-anchor" href="#技巧3-分步骤实现复杂功能"><span>技巧3：分步骤实现复杂功能</span></a></h3><p>不要一次性要求AI实现整个复杂功能，而是分步骤：</p><ol><li>先让AI创建基本结构</li><li>再添加具体功能</li><li>最后优化和美化</li></ol><h2 id="🔥-解决常见问题" tabindex="-1"><a class="header-anchor" href="#🔥-解决常见问题"><span>🔥 解决常见问题</span></a></h2><h3 id="q-500次对话很快就用完了怎么办" tabindex="-1"><a class="header-anchor" href="#q-500次对话很快就用完了怎么办"><span>Q: 500次对话很快就用完了怎么办？</span></a></h3><p><strong>A: 学会&quot;批量处理&quot;</strong></p><p>❌ 分别问：</p><ul><li>&quot;帮我写个按钮组件&quot;</li><li>&quot;给按钮加个点击效果&quot;</li><li>&quot;让按钮支持不同颜色&quot;</li></ul><p>✅ 一次性问：</p><ul><li>&quot;创建一个React按钮组件，支持不同颜色主题，包含点击动画效果，props包括color、onClick、children&quot;</li></ul><h3 id="q-ai生成的代码不符合我的项目风格" tabindex="-1"><a class="header-anchor" href="#q-ai生成的代码不符合我的项目风格"><span>Q: AI生成的代码不符合我的项目风格？</span></a></h3><p><strong>A: 提供样式参考</strong></p><p>在提问时附上你项目中的代码片段作为参考：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">&quot;参考这个组件的风格：[粘贴你的代码]，帮我创建一个类似的表单组件&quot;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="q-如何让ai理解我的项目结构" tabindex="-1"><a class="header-anchor" href="#q-如何让ai理解我的项目结构"><span>Q: 如何让AI理解我的项目结构？</span></a></h3><p><strong>A: 使用<code>Cmd+L</code>进行项目讨论</strong></p><ol><li>按<code>Cmd+L</code>打开聊天</li><li>输入：&quot;这是我的项目结构：[描述或粘贴目录结构]&quot;</li><li>然后再提出具体需求</li></ol><h2 id="🎨-实战案例-5分钟实现一个todo组件" tabindex="-1"><a class="header-anchor" href="#🎨-实战案例-5分钟实现一个todo组件"><span>🎨 实战案例：5分钟实现一个Todo组件</span></a></h2><p>让我们用Cursor快速实现一个完整的Todo组件：</p><h3 id="步骤1-创建基础结构" tabindex="-1"><a class="header-anchor" href="#步骤1-创建基础结构"><span>步骤1：创建基础结构</span></a></h3><p>选择一个空白区域，按<code>Cmd+K</code>：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">创建一个React Todo组件，包含添加任务、标记完成、删除任务的功能，使用useState管理状态</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="步骤2-美化样式" tabindex="-1"><a class="header-anchor" href="#步骤2-美化样式"><span>步骤2：美化样式</span></a></h3><p>选中生成的组件，按<code>Cmd+K</code>：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">为这个Todo组件添加现代化的CSS样式，使用flexbox布局，包含悬停效果和完成任务的划线效果</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="步骤3-优化体验" tabindex="-1"><a class="header-anchor" href="#步骤3-优化体验"><span>步骤3：优化体验</span></a></h3><p>继续选中代码，按<code>Cmd+K</code>：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">添加输入验证，防止添加空白任务，并在添加任务后清空输入框</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>5分钟内，一个完整的Todo组件就完成了！</strong></p><h2 id="🚀-下一步学习路径" tabindex="-1"><a class="header-anchor" href="#🚀-下一步学习路径"><span>🚀 下一步学习路径</span></a></h2><p>现在你已经掌握了基础用法，可以深入学习更多技巧：</p>`,53)),s("ol",null,[s("li",null,[s("strong",null,[t(a,{to:"/practices/"},{default:l(()=>e[0]||(e[0]=[n("核心实践")])),_:1,__:[0]})]),e[1]||(e[1]=n(" - 学习高级的AI对话技巧"))]),s("li",null,[s("strong",null,[t(a,{to:"/tips/"},{default:l(()=>e[2]||(e[2]=[n("实用技巧")])),_:1,__:[2]})]),e[3]||(e[3]=n(" - 掌握更多快捷键和工作流"))]),s("li",null,[s("strong",null,[t(a,{to:"/advanced/"},{default:l(()=>e[4]||(e[4]=[n("进阶技巧")])),_:1,__:[4]})]),e[5]||(e[5]=n(" - 自定义规则和团队协作"))])]),e[10]||(e[10]=i('<h2 id="💪-每日练习建议" tabindex="-1"><a class="header-anchor" href="#💪-每日练习建议"><span>💪 每日练习建议</span></a></h2><ul><li><strong>第1周</strong>：熟练掌握<code>Cmd+K</code>、<code>Cmd+L</code>、<code>Tab</code>三个核心快捷键</li><li><strong>第2周</strong>：练习编写精准的提示词，提高AI理解准确度</li><li><strong>第3周</strong>：学习上下文管理，让AI更好地理解你的项目</li><li><strong>第4周</strong>：探索高级功能，建立自己的最佳实践</li></ul><hr><blockquote><p>💡 <strong>记住</strong>：Cursor是工具，思维才是核心。掌握了正确的使用方法，你会发现编程变得前所未有的高效和有趣！</p></blockquote>',4)),s("p",null,[e[7]||(e[7]=s("strong",null,"准备好开始你的高效编程之旅了吗？",-1)),e[8]||(e[8]=n()),t(a,{to:"/practices/"},{default:l(()=>e[6]||(e[6]=[n("立即查看核心实践 →")])),_:1,__:[6]})])])}const g=r(c,[["render",u]]),v=JSON.parse('{"path":"/get-started.html","title":"🚀 快速开始","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"🎯 5分钟快速上手","slug":"🎯-5分钟快速上手","link":"#🎯-5分钟快速上手","children":[{"level":3,"title":"第一步：下载安装Cursor","slug":"第一步-下载安装cursor","link":"#第一步-下载安装cursor","children":[]},{"level":3,"title":"第二步：掌握核心快捷键","slug":"第二步-掌握核心快捷键","link":"#第二步-掌握核心快捷键","children":[]},{"level":3,"title":"第三步：你的第一次AI对话","slug":"第三步-你的第一次ai对话","link":"#第三步-你的第一次ai对话","children":[]}]},{"level":2,"title":"💡 立即见效的3个技巧","slug":"💡-立即见效的3个技巧","link":"#💡-立即见效的3个技巧","children":[{"level":3,"title":"技巧1：精准描述需求","slug":"技巧1-精准描述需求","link":"#技巧1-精准描述需求","children":[]},{"level":3,"title":"技巧2：提供上下文","slug":"技巧2-提供上下文","link":"#技巧2-提供上下文","children":[]},{"level":3,"title":"技巧3：分步骤实现复杂功能","slug":"技巧3-分步骤实现复杂功能","link":"#技巧3-分步骤实现复杂功能","children":[]}]},{"level":2,"title":"🔥 解决常见问题","slug":"🔥-解决常见问题","link":"#🔥-解决常见问题","children":[{"level":3,"title":"Q: 500次对话很快就用完了怎么办？","slug":"q-500次对话很快就用完了怎么办","link":"#q-500次对话很快就用完了怎么办","children":[]},{"level":3,"title":"Q: AI生成的代码不符合我的项目风格？","slug":"q-ai生成的代码不符合我的项目风格","link":"#q-ai生成的代码不符合我的项目风格","children":[]},{"level":3,"title":"Q: 如何让AI理解我的项目结构？","slug":"q-如何让ai理解我的项目结构","link":"#q-如何让ai理解我的项目结构","children":[]}]},{"level":2,"title":"🎨 实战案例：5分钟实现一个Todo组件","slug":"🎨-实战案例-5分钟实现一个todo组件","link":"#🎨-实战案例-5分钟实现一个todo组件","children":[{"level":3,"title":"步骤1：创建基础结构","slug":"步骤1-创建基础结构","link":"#步骤1-创建基础结构","children":[]},{"level":3,"title":"步骤2：美化样式","slug":"步骤2-美化样式","link":"#步骤2-美化样式","children":[]},{"level":3,"title":"步骤3：优化体验","slug":"步骤3-优化体验","link":"#步骤3-优化体验","children":[]}]},{"level":2,"title":"🚀 下一步学习路径","slug":"🚀-下一步学习路径","link":"#🚀-下一步学习路径","children":[]},{"level":2,"title":"💪 每日练习建议","slug":"💪-每日练习建议","link":"#💪-每日练习建议","children":[]}],"git":{"updatedTime":1750691504000,"contributors":[{"name":"tiejia","username":"tiejia","email":"niexq0319@gmail.com","commits":1,"url":"https://github.com/tiejia"}],"changelog":[{"hash":"055bda4adb6a5fb0ecf2c94b1d330d36085388c1","time":1750691504000,"email":"niexq0319@gmail.com","author":"tiejia","message":"Init Commit"}]},"filePathRelative":"get-started.md"}');export{g as comp,v as data};
